#!/bin/bash
set -e

# Script to auto build and install R-core. Just provide the version
# Need to use scl enable devtoolset-9 'bash' though.

function usage() {
 cat << EOF
Usage: ${0} <VERSION>

 <VERSION> is the specific version number you're building

EOF
}

# Quit the script if it doesn't have enough flags set
if [ $# -lt 1 ]; then
 usage
 exit 1
fi

# Old devtoolset export for CentOS 7
#export PATH=/opt/rh/devtoolset-9/root/usr/bin:$PATH
VERSION=$1
CPUS=16
RELEASE=${VERSION%%.*}
DATE=`date +"%d/%m/%Y %r"`
echo "Building R-core ${VERSION} R-${RELEASE} on ${DATE}"
cd /opt/bioit/R-core/src
wget https://cloud.r-project.org/src/base/R-${RELEASE}/R-${VERSION}.tar.gz
tar xvf R-${VERSION}.tar.gz
cd R-${VERSION}
./configure --prefix=/opt/bioit/R-core/${VERSION} --enable-R-shlib --with-x --with-libpng --with-jpeglib --with-cairo --with-libtiff --with-blas --with-lapack --enable-memory-profiling --with-pcre1
 
make clean
make -j${CPUS}
make install


# Make sure bin directory is added by appending location to PATH in Renviron
echo PATH=$\{PATH\}:/opt/bioit/R-core/${VERSION}/lib64/R/bin >> /opt/bioit/R-core/${VERSION}/lib64/R/etc/Renviron
# Make sure devtoolset is used by default by appending location to PATH
#echo PATH=/opt/rh/devtoolset-9/root/usr/bin:$\{PATH\}:/opt/bioit/R-core/${VERSION}/lib64/R/bin >> /opt/bioit/R-core/${VERSION}/lib64/R/etc/Renviron

# Make sure pkg_config is set
echo PKG_CONFIG_PATH=/opt/bioit/R-core/${VERSION}/lib64/R/lib/pkgconfig >> /opt/bioit/R-core/${VERSION}/lib64/R/etc/Renviron

echo "#%Module 1.0
#
#  R-core module for use with 'environment-modules' package:
#
prepend-path  PATH              /opt/bioit/R-core/${VERSION}/bin
prepend-path  MANPATH		/opt/bioit/R-core/${VERSION}/share/man
prepend-path  LD_LIBRARY_PATH   /opt/bioit/R-core/${VERSION}/lib64/R/lib" > /opt/bioit/modulefiles/R/${VERSION}

export LD_LIBRARY_PATH=/opt/bioit/R-core/${VERSION}/lib64/R/lib:$LD_LIBRARY_PATH
echo "Install geos"
cd /opt/bioit/R-core/src/R-${VERSION}
wget http://download.osgeo.org/geos/geos-3.9.1.tar.bz2
tar xvf geos-3.9.1.tar.bz2
cd geos-3.9.1
./configure --prefix=/opt/bioit/R-core/${VERSION}/lib64/R
make -j${CPUS}
make install

echo "Install sqlite3"
cd /opt/bioit/R-core/src/R-${VERSION}
wget https://www.sqlite.org/2021/sqlite-autoconf-3360000.tar.gz
tar xvf sqlite-autoconf-3360000.tar.gz
cd sqlite-autoconf-3360000
export CPPFLAGS="-fPIC"
export CFLAGS="-DSQLITE_ENABLE_COLUMN_METADATA=1"
#export CXXFLAGS="-fPIC"
./configure --disable-dynamic-extensions --enable-static --disable-shared --prefix=/opt/bioit/R-core/${VERSION}/lib64/R
make -j${CPUS}
make install

echo "Install proj"
cd /opt/bioit/R-core/src/R-${VERSION}
wget https://github.com/OSGeo/PROJ/releases/download/7.2.1/proj-7.2.1.tar.gz
tar xvf proj-7.2.1.tar.gz
cd proj-7.2.1
export SQLITE3_CFLAGS="-I/opt/bioit/R-core/${VERSION}/lib64/R/include"
export SQLITE3_LIBS=/opt/bioit/R-core/${VERSION}/lib64/R/lib/libsqlite*
export PATH=/opt/bioit/R-core/${VERSION}/lib64/R/bin:$PATH
./configure --prefix=/opt/bioit/R-core/${VERSION}/lib64/R
make -j${CPUS}
make install
# Ensure proj4 package will build by defining this macro
sed -e '36i#define ACCEPT_USE_OF_DEPRECATED_PROJ_API_H' --in-place /opt/bioit/R-core/${VERSION}/lib64/R/include/proj_api.h
# Turn on CDN for proj
sed 's/; network = on/network = on/g' --in-place /opt/bioit/R-core/${VERSION}/lib64/R/share/proj/proj.ini

echo "Install gdal"
cd /opt/bioit/R-core/src/R-${VERSION}
wget https://github.com/OSGeo/gdal/releases/download/v3.3.2/gdal-3.3.2.tar.gz
tar xvf gdal-3.3.2.tar.gz
cd gdal-3.3.2
./configure --prefix=/opt/bioit/R-core/${VERSION}/lib64/R --with-geos=/opt/bioit/R-core/${VERSION}/lib64/R/bin/geos-config --with-proj=/opt/bioit/R-core/${VERSION}/lib64/R
make -j${CPUS}
make install

echo "Install nlopt"
cd /opt/bioit/R-core/src/R-${VERSION}
wget https://github.com/stevengj/nlopt/archive/refs/tags/v2.7.1.tar.gz
tar xvf v2.7.1.tar.gz
cd nlopt-2.7.1
mkdir build
cd build
cmake3 ..
# Change destination directory for install
sed "s+set(CMAKE_INSTALL_PREFIX \"/usr/local\")+set(CMAKE_INSTALL_PREFIX \"/opt/bioit/R-core/${VERSION}/lib64/R\")+g" --in-place cmake_install.cmake
# Delete swig line since it isn't used by R
sed "/swig/d" --in-place cmake_install.cmake
# Create symlink lib64 if absent back to lib so ldconfig works
if [ ! -L /opt/bioit/R-core/${VERSION}/lib64/R/lib64 ]; then
  ln -s /opt/bioit/R-core/${VERSION}/lib64/R/lib /opt/bioit/R-core/${VERSION}/lib64/R/lib64
fi
# build and install
make install

echo "Install required packages"
/opt/bioit/R-core/${VERSION}/bin/Rscript ${HOME}/bioit/apps/R-core/SPEC/bioC_install.R
echo "Writing module .version to set default"
echo "#%Module1.0
##
##  The desired version of R
##
set ModulesVersion ${VERSION}" > /opt/bioit/modulefiles/R/.version
