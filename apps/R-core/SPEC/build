#!/bin/bash
set -e

# Script to auto build and install R-core. Just provide the version
# Need to use scl enable devtoolset-9 'bash' though.

function usage() {
 cat << EOF
Usage: ${0} <VERSION>

 <VERSION> is the specific version number you're building

EOF
}

# Quit the script if it doesn't have enough flags set
if [ $# -lt 1 ]; then
 usage
 exit 1
fi

# Old devtoolset export for CentOS 7
#export PATH=/opt/rh/devtoolset-9/root/usr/bin:$PATH
VERSION=$1
CPUS=16
RELEASE=${VERSION%%.*}
DATE=`date +"%d/%m/%Y %r"`
echo "Building R-core ${VERSION} R-${RELEASE} on ${DATE}"
cd /opt/bioit/R-core/src
wget https://cloud.r-project.org/src/base/R-${RELEASE}/R-${VERSION}.tar.gz
tar xvf R-${VERSION}.tar.gz
cd R-${VERSION}
./configure --prefix=/opt/bioit/R-core/${VERSION} --enable-R-shlib --with-x --with-libpng --with-jpeglib --with-cairo --with-libtiff --with-blas --with-lapack --enable-memory-profiling --with-pcre1
 
make clean
make -j${CPUS}
make install


# Make sure bin directory is added by appending location to PATH in Renviron
echo PATH=$\{PATH\}:/opt/bioit/R-core/${VERSION}/lib64/R/bin >> /opt/bioit/R-core/${VERSION}/lib64/R/etc/Renviron
# Make sure devtoolset is used by default by appending location to PATH
#echo PATH=/opt/rh/devtoolset-9/root/usr/bin:$\{PATH\}:/opt/bioit/R-core/${VERSION}/lib64/R/bin >> /opt/bioit/R-core/${VERSION}/lib64/R/etc/Renviron

# Make sure pkg_config is set
echo PKG_CONFIG_PATH=/opt/bioit/R-core/${VERSION}/lib64/R/lib/pkgconfig >> /opt/bioit/R-core/${VERSION}/lib64/R/etc/Renviron

echo "#%Module 1.0
#
#  R-core module for use with 'environment-modules' package:
#
prepend-path  PATH              /opt/bioit/R-core/${VERSION}/bin
prepend-path  MANPATH		/opt/bioit/R-core/${VERSION}/share/man
prepend-path  LD_LIBRARY_PATH   /opt/bioit/R-core/${VERSION}/lib64/R/lib" > /opt/bioit/modulefiles/R/${VERSION}

export LD_LIBRARY_PATH=/opt/bioit/R-core/${VERSION}/lib64/R/lib:$LD_LIBRARY_PATH
echo "Install geos"
cd /opt/bioit/R-core/src/R-${VERSION}
wget http://download.osgeo.org/geos/geos-3.9.1.tar.bz2
tar xvf geos-3.9.1.tar.bz2
cd geos-3.9.1
./configure --prefix=/opt/bioit/R-core/${VERSION}/lib64/R
make -j${CPUS}
make install

echo "Install sqlite3"
cd /opt/bioit/R-core/src/R-${VERSION}
#wget https://www.sqlite.org/2021/sqlite-autoconf-3360000.tar.gz
wget https://sqlite.org/2024/sqlite-autoconf-3460000.tar.gz
#tar xvf sqlite-autoconf-3360000.tar.gz
tar xvf sqlite-autoconf-3460000.tar.gz
#cd sqlite-autoconf-3360000
cd sqlite-autoconf-3460000
export CPPFLAGS="-fPIC"
export CFLAGS="-DSQLITE_ENABLE_COLUMN_METADATA=1"
#export CXXFLAGS="-fPIC"
./configure --disable-dynamic-extensions --enable-static --disable-shared --prefix=/opt/bioit/R-core/${VERSION}/lib64/R
make -j${CPUS}
make install

echo "Install proj"
cd /opt/bioit/R-core/src/R-${VERSION}
wget https://github.com/OSGeo/PROJ/releases/download/7.2.1/proj-7.2.1.tar.gz
tar xvf proj-7.2.1.tar.gz
cd proj-7.2.1
export SQLITE3_CFLAGS="-I/opt/bioit/R-core/${VERSION}/lib64/R/include"
export SQLITE3_LIBS=/opt/bioit/R-core/${VERSION}/lib64/R/lib/libsqlite*
export PATH=/opt/bioit/R-core/${VERSION}/lib64/R/bin:$PATH
./configure --prefix=/opt/bioit/R-core/${VERSION}/lib64/R
make -j${CPUS}
make install
# Ensure proj4 package will build by defining this macro
sed -e '36i#define ACCEPT_USE_OF_DEPRECATED_PROJ_API_H' --in-place /opt/bioit/R-core/${VERSION}/lib64/R/include/proj_api.h
# Turn on CDN for proj
sed 's/; network = on/network = on/g' --in-place /opt/bioit/R-core/${VERSION}/lib64/R/share/proj/proj.ini

echo "Install gdal"
cd /opt/bioit/R-core/src/R-${VERSION}
wget https://github.com/OSGeo/gdal/releases/download/v3.5.3/gdal-3.5.3.tar.gz
tar xvf gdal-3.5.3.tar.gz
cd gdal-3.5.3
./configure --prefix=/opt/bioit/R-core/${VERSION}/lib64/R --with-geos=/opt/bioit/R-core/${VERSION}/lib64/R/bin/geos-config --with-proj=/opt/bioit/R-core/${VERSION}/lib64/R --with-sqlite3=no
make -j${CPUS}
make install

echo "Install nlopt"
cd /opt/bioit/R-core/src/R-${VERSION}
wget https://github.com/stevengj/nlopt/archive/refs/tags/v2.7.1.tar.gz
tar xvf v2.7.1.tar.gz
cd nlopt-2.7.1
mkdir build
cd build
cmake3 ..
# Change destination directory for install
sed "s+set(CMAKE_INSTALL_PREFIX \"/usr/local\")+set(CMAKE_INSTALL_PREFIX \"/opt/bioit/R-core/${VERSION}/lib64/R\")+g" --in-place cmake_install.cmake
# Delete swig line since it isn't used by R
sed "/swig/d" --in-place cmake_install.cmake
# Create symlink lib64 if absent back to lib so ldconfig works
if [ ! -L /opt/bioit/R-core/${VERSION}/lib64/R/lib64 ]; then
  ln -s /opt/bioit/R-core/${VERSION}/lib64/R/lib /opt/bioit/R-core/${VERSION}/lib64/R/lib64
fi
# build and install
make install

# Install standard packages
PREFIX_DIR=/opt/bioit/R-core/${VERSION}

echo "install.packages(c('httr'), repos='https://cloud.r-project.org/', lib='${PREFIX_DIR}/lib64/R/library')" | ${PREFIX_DIR}/bin/R --no-save
echo "install.packages(c('devtools'), repos='https://cloud.r-project.org/', lib='${PREFIX_DIR}/lib64/R/library')" | ${PREFIX_DIR}/bin/R --no-save
echo "install.packages(c('BiocManager'), repos='https://cloud.r-project.org/', lib='${PREFIX_DIR}/lib64/R/library')" | ${PREFIX_DIR}/bin/R --no-save
echo "BiocManager::install(version = '3.20')" | ${PREFIX_DIR}/bin/R --no-save
echo "BiocManager::install(c('Biobase','AnnotationForge','biomformat','Category','DOT','GOstats','rsvg','ROTS','goseq','biomaRt','dada2','DESeq2','DNAcopy','aroma.light','affxparser','edgeR','ctc','ape','limma','HilbertVis','cummeRbund','multtest','phyloseq','sva','systemPipeR','BSgenome.Hsapiens.UCSC.hg19','BSgenome.Mmusculus.UCSC.mm10','bumphunter','impute','safe','org.Hs.eg.db','GO.db','preprocessCore','methylKit','DECIPHER','derfinder','BiocGenerics','BiocParallel','BiocVersion','Biostrings','decontam','DelayedArray','FEAST','GenomeInfoDb','GenomeInfoDbData','GenomicAlignments','GenomicRanges','ggtree','IRanges','Rhtslib','Rsamtools','S4Vectors','ShortRead','SingleCellExperiment','SummarizedExperiment','TrajectoryUtils','treeio','TSCAN','XVector','zlibbioc', 'sf'), Ncpus=${CPUS})" | ${PREFIX_DIR}/bin/R --no-save
echo "install.packages(c('akima', 'anytime', 'aroma.affymetrix', 'aroma.apd', 'aroma.core', 'arsenal', 'ascii', 'assertthat', 'aws', 'awsMethods', 'base64', 'base64url', 'batchtools', 'beeswarm', 'bindr', 'bindrcpp', 'broom', 'car', 'carData', 'cellranger', 'chron', 'classInt', 'coin', 'conflicted', 'corpcor', 'covr', 'cowplot', 'crosstalk', 'crul', 'cyclocomp', 'DBItest', 'debugme', 'Deriv', 'doBy', 'DT', 'dtplyr', 'dygraphs', 'dynamicTreeCut', 'egg', 'expm', 'fastmatch', 'filehash', 'fit.models', 'fontBitstreamVera', 'fontLiberation', 'fontquiver', 'forcats', 'future', 'gam', 'gargle', 'gdtools', 'gee', 'getopt', 'getPass', 'gettz', 'gfonts', 'ggbeeswarm', 'ggforce', 'ggplot2movies', 'glmmTMB', 'glmnet', 'globals', 'gmailr', 'goftest', 'googledrive', 'googlesheets4', 'GPArotation', 'gridBase', 'gsalib', 'gsl', 'gsmoothr', 'gsubfn', 'haplo.stats', 'haven', 'here', 'hexbin', 'HiddenMarkov', 'HRW', 'httpcode', 'hunspell', 'ids', 'igraphdata', 'import', 'inline', 'inum', 'IRdisplay', 'IRkernel', 'itertools', 'jose', 'JuliaCall', 'kernlab', 'Lahman', 'leaflet.providers', 'libcoin', 'lintr', 'listenv', 'lme4', 'lmeInfo', 'lmerTest', 'lmeSplines', 'lmtest', 'lobstr', 'locfdr', 'lubridate', 'magick', 'manipulateWidget', 'mapproj', 'maps', 'markdown', 'MatrixModels', 'measurements', 'metagenomeSeq', 'microbenchmark', 'minqa', 'misc3d', 'mlbench', 'mnormt', 'mockery', 'mockr', 'modelr', 'modeltools', 'multcomp', 'nanoarrow', 'nanotime', 'NISTunits', 'nloptr', 'nycflights13', 'odbc', 'openxlsx', 'optparse', 'orientlib', 'packrat', 'palmerpenguins', 'parallelly', 'party', 'partykit', 'pbdZMQ', 'pbkrtest', 'phangorn', 'pinp', 'pkgKitten', 'pkgmaker', 'PKI', 'plotly', 'plotrix', 'plumber', 'polspline', 'polyclip', 'predictmeans', 'proj4', 'proto', 'pryr', 'PSCBS', 'psych', 'quadprog', 'quantreg', 'randomForest', 'RApiDatetime', 'rbenchmark', 'rbibutils', 'R.cache', 'RcppCCTZ', 'RcppDate', 'RcppTOML', 'R.devices', 'Rdpack', 'readr', 'readxl', 'reformulas', 'registry', 'rematch', 'rematch2', 'renv', 'repr', 'reprex', 'reshape', 'reticulate', 'rex', 'R.filesets', 'rgl', 'RH2', 'R.huge', 'rJava', 'RJDBC', 'RJSONIO', 'rlecuyer', 'rms', 'RMySQL', 'robust', 'RPostgres', 'RPostgreSQL', 'rprintf', 'R.rsp', 'rsconnect', 'RUnit', 'rvcheck', 'rvest', 's2', 'sandwich', 'selectr', 'shape', 'shinyAce', 'shinyjs', 'shinythemes', 'showtext', 'showtextdb', 'sodium', 'spatstat', 'spatstat.data', 'spatstat.explore', 'spatstat.geom', 'spatstat.linnet', 'spatstat.model', 'spatstat.random', 'spatstat.sparse', 'spatstat.univar', 'spatstat.utils', 'spData', 'splines2', 'stringdist', 'strucchange', 'svglite', 'swagger', 'sysfonts', 'tcltk2', 'tensor', 'terra', 'testit', 'TH.data', 'tidyverse', 'tikzDevice', 'timechange', 'tkrplot', 'TMB', 'triebeard', 'tripack', 'tufte', 'tweenr', 'tzdb', 'unitizer', 'units', 'urltools', 'uuid', 'vcd', 'vdiffr', 'vipor', 'vroom', 'webshot', 'webutils', 'WGCNA', 'wk', 'wordcloud', 'XLConnect', 'xmlparsedata', 'xts', 'zeallot', 'zoo'), Ncpus=${CPUS}, repos='https://cloud.r-project.org/', lib='${PREFIX_DIR}/lib64/R/library')" | ${PREFIX_DIR}/bin/R --no-save
echo "install.packages('https://cran.r-project.org/src/contrib/Archive/rgdal/rgdal_1.6-7.tar.gz', repos = NULL, type='source', lib='${PREFIX_DIR}/lib64/R/library')" | ${PREFIX_DIR}/bin/R --no-save
echo "install.packages('https://cran.r-project.org/src/contrib/Archive/rgeos/rgeos_0.6-4.tar.gz', repos = NULL, type='source', lib='${PREFIX_DIR}/lib64/R/library')" | ${PREFIX_DIR}/bin/R --no-save
echo "install.packages('https://cran.r-project.org/src/contrib/Archive/maptools/maptools_1.1-8.tar.gz', repos = NULL, type='source', lib='${PREFIX_DIR}/lib64/R/library')" | ${PREFIX_DIR}/bin/R --no-save

# Write the version file making this the default
echo "Writing module .version to set default"
echo "#%Module1.0
#
#  The desired version of R
#
set ModulesVersion ${VERSION}" > /opt/bioit/modulefiles/R/.version
