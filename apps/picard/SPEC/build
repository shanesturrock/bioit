#!/bin/bash

# Script to auto build and install picard. Just provide the version

function usage() {
 cat << EOF
Usage: ${0} <VERSION>

 <VERSION> is the specific version number you're building

EOF
}

# Quit the script if it doesn't have enough flags set
if [ $# -lt 1 ]; then
 usage
 exit 1
fi

VERSION=$1
DATE=`date +"%d/%m/%Y %r"`
# This build script requires Java, download and decompress if it is missing
export JAVA_HOME=/opt/bioit/jdk-17.0.2
if [[ ! -d ${JAVA_HOME} ]]; then
   cd /opt/bioit
   wget https://download.java.net/java/GA/jdk17.0.2/dfd4a8d0985749f896bed50d7138ee7f/8/GPL/openjdk-17.0.2_linux-x64_bin.tar.gz
   tar xvf openjdk-17.0.2_linux-x64_bin.tar.gz
   rm openjdk-17.0.2_linux-x64_bin.tar.gz
fi
# Should now have the right version of Java available so set the PATH variables
export PATH=$PATH:$JAVA_HOME/bin
echo "Building picard ${VERSION} on ${DATE}"
cd /opt/bioit/picard/src
git clone -b ${VERSION} https://github.com/broadinstitute/picard.git
mv picard picard-${VERSION}
cd picard-${VERSION}
./gradlew shadowJar
mkdir /opt/bioit/picard/${VERSION}
mv build/libs/picard.jar /opt/bioit/picard/${VERSION}
echo "Copy picard script"
cp ${HOME}/bioit/apps/picard/SPEC/picard /opt/bioit/picard/${VERSION}
echo "Writing modulefile"
echo "#%Module 1.0
#
#  picard module for use with 'environment-modules' package:
#
prepend-path  PATH              /opt/bioit/picard/${VERSION}" > /opt/bioit/modulefiles/picard/${VERSION}
echo "Writing module .version to set default"
echo "#%Module1.0
##
##  The desired version of picard
##
set ModulesVersion ${VERSION}" > /opt/bioit/modulefiles/picard/.version
