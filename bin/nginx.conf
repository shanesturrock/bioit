# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    # If a password is needed, put it inside this file
    # ssl_password_file /etc/nginx/ssl/global.pass;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    client_max_body_size 0;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # server {
        # listen       80;
        # listen       [::]:80;
        # server_name  _;
        # root         /usr/share/nginx/html;
# 
        # # Load configuration files for the default server block.
        # include /etc/nginx/default.d/*.conf;
# 
        # error_page 404 /404.html;
        # location = /404.html {
        # }
# 
        # error_page 500 502 503 504 /50x.html;
        # location = /50x.html {
        # }
    # }

    server {

	server_name nagios.ipa.test;

	root /var/www/html;
	index index.html;

	location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://localhost:8282/;
        proxy_redirect http://localhost:8282/ $scheme://$host/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_read_timeout 20d;
	}

        listen [::]:443 ssl;
        listen 443 ssl;
        ssl_protocols TLSv1.2;
        ssl_prefer_server_ciphers on;
        # Modify the crt and key names as necessary
        ssl_certificate /etc/nginx/ssl/hostname.crt;
        ssl_certificate_key /etc/nginx/ssl/hostname.key;
    }

    server {

	server_name jupyter.ipa.test;

	root /var/www/html;
	index index.html;

	location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://localhost:8080/;
        proxy_redirect http://localhost:8080/ $scheme://$host/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_read_timeout 20d;
	}

        listen [::]:443 ssl;
        listen 443 ssl;
        ssl_protocols TLSv1.2;
        ssl_prefer_server_ciphers on;
        # Modify the crt and key names as necessary
        ssl_certificate /etc/nginx/ssl/hostname.crt;
        ssl_certificate_key /etc/nginx/ssl/hostname.key;
    }

    server {

	server_name rstudio.ipa.test;

	root /var/www/html;
	index index.html;

	location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://localhost:9797/;
        proxy_redirect http://localhost:9797/ $scheme://$host/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_read_timeout 20d;
	}

        listen [::]:443 ssl;
        listen 443 ssl;
        ssl_protocols TLSv1.2;
        ssl_prefer_server_ciphers on;
        # Modify the crt and key names as necessary
        ssl_certificate /etc/nginx/ssl/hostname.crt;
        ssl_certificate_key /etc/nginx/ssl/hostname.key;
    }

    server {
        if ($host = nagios.ipa.test) {
            return 301 https://$host$request_uri;
        }

        listen 80;
        listen [::]:80;

        server_name nagios.ipa.test;
        return 404;
    }

    server {
        if ($host = jupyter.ipa.test) {
            return 301 https://$host$request_uri;
        }

        listen 80;
        listen [::]:80;

        server_name jupyter.ipa.test;
        return 404;
    }

    server {
        if ($host = rstudio.ipa.test) {
            return 301 https://$host$request_uri;
        }

        listen 80;
        listen [::]:80;

        server_name rstudio.ipa.test;
        return 404;

    }
      
    

# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl http2;
#        listen       [::]:443 ssl http2;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers HIGH:!aNULL:!MD5;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        error_page 404 /404.html;
#            location = /40x.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#            location = /50x.html {
#        }
#    }

}

